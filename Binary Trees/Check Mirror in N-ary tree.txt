int checkMirrorTree(int n, int e, int a[], int b[]) {
        
        map<int, stack<int>> m;
        n = 2*e;
        for(int i=0; i<n-1; i+=2)
        {
            m[a[i]].push(a[i+1]);
        }
        
        for(int i=0; i<n-1; i+=2)
        {
            if(!(m[b[i]].empty()) && m[b[i]].top() == b[i+1])
            m[b[i]].pop();
            
            else 
            {   
                return false;
            }
        }
        return true;
    }