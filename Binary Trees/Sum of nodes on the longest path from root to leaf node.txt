pair<int, int> solve(Node* root)
    {
        // pair<length, sum> 
        if(!root)
        return make_pair(0, 0);
        
        pair<int, int> p1 = solve(root->left);
        pair<int, int> p2 = solve(root->right);
        
        if(p1.first > p2.first)
        return make_pair(p1.first+1, root->data + p1.second);
        
        if(p1.first == p2.first)
        return make_pair(p1.first+1, root->data + max(p1.second, p2.second));
        
        return make_pair(p2.first+1, root->data + p2.second);
    }
    int sumOfLongRootToLeafPath(Node *root)
    {
        return solve(root).second;
    }