int findFirst(int arr[], int n, int x)
    {
        int st = 0,end = n-1;
        int mid = st + (end-st)/2;
        int ans = -1;
        
        while(st <= end)
        {
            if(arr[mid] == x)
            {
                ans = mid;
                end = mid-1;
            }
            
            else if(x > arr[mid])
            {
                st = mid+1;
            }
            else 
            {
                end = mid-1;
            }
            mid = st + (end-st)/2;
        }
        return ans;
    }
    
    int findLast(int arr[], int n, int x)
    {
        int st = 0,end = n-1;
        int mid = st + (end-st)/2;
        int ans = -1;
        
        while(st <= end)
        {
            if(arr[mid] == x)
            {
                ans = mid;
                st = mid+1;
            }
            
            else if(x > arr[mid])
            {
                st = mid+1;
            }
            else 
            {
                end = mid-1;
            }
            mid = st + (end-st)/2;
        }
        return ans;
    }
    vector<int> find(int arr[], int n , int x )
    {
        int i = findFirst(arr, n, x);
        int j = findLast(arr, n, x);
        vector<int> ans;
        ans.push_back(i);
        ans.push_back(j);
        return ans;
    }