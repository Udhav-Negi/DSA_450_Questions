vector<vector<int> > fourSum(vector<int> &nums, int target) {
        long long n = nums.size();
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());

        for(long long i=0; i < n; i++)
        {
            if(i != 0 && nums[i] == nums[i-1])
            continue;
            for(long long j=i+1; j<n; j++)
            {
                if(j != i+1 && nums[j] == nums[j-1])
                continue;

                long long low = j+1, high = n-1;
                while(low < high)
                {
                    long long sum = ((long long)nums[i] + (long long)nums[j] + (long long)nums[low] + (long long)nums[high]);

                    if(sum == target)
                    {
                        vector<int> temp = {nums[i], nums[j], nums[low], nums[high]};
                        ans.push_back(temp);
                        low++, high--;

                        while(low < high && nums[low] == nums[low-1])
                        low++;

                        while(low < high && nums[high] == nums[high+1])
                        high--;

                    }

                    else if(sum > target)
                    {
                        high--;
                    }

                    else if(sum < target)
                    {
                        low++;
                    }
                }
            }
        }
        return ans;
    }